library(Rcpp)
library(microbenchmark)
library(Rcpp)
library(microbenchmark)
library(Rcpp)
library(microbenchmark)
y <- sample(1:100, 100, replace=T)
x <- (1:100)
z <- sample(1:100, 1e5, replace=T)
v <- sample(1:1e5, 1e5, replace=T)
w <- 1:1e5
all.equal(x %in% y,  inC(x, y))
sourceCpp('cpp_test2.cpp')
all.equal(x %in% y,  inC(x, y))
microbenchmark(x %in% y, inC(x, y), x %in% z, inC(x, z), v %in% w, inC(v, w))
microbenchmark(x %in% y, inC(x, y), x %in% z, inC(x, z), w %in% v, inC(w, v))
sourceCpp('cpp_test2.cpp')
sourceCpp('cpp_test2.cpp')
sourceCpp('cpp_test2.cpp')
all.equal(unique(y), uniqueC(y))
unique(y)
uniqueC(y)
all.equal(sort(unique(y)), uniqueC(y))
microbenchmark(unique(y), uniqueC(y))
microbenchmark(unique(v), uniqueC(v))
sourceCpp('cpp_test2.cpp')
sourceCpp('cpp_test2.cpp')
all.equal(sort(unique(y)), uniqueC(y))
microbenchmark(unique(v), uniqueC(v))
x <- runif(1e6)
min(x)
minC(x)
x <- runif(1e6)
min(x)
minC(x)
sourceCpp('cpp_test2.cpp')
x <- runif(1e6)
sourceCpp('cpp_test2.cpp')
x <- runif(1e6)
min(x)
minC(x)
microbenchmark(min(x), minC(x))
sourceCpp('cpp_test2.cpp')
min2C(x)
microbenchmark(min(x), minC(x), min2C(x))
sourceCpp('cpp_test2.cpp')
min2C(x)
microbenchmark(min(x), minC(x), min2C(x))
sourceCpp('cpp_test2.cpp')
which.min(x)
which_minC(x)
sourceCpp('cpp_test2.cpp')
which_minC(x)
microbenchmark(which_min(x), which.minC(x))
microbenchmark(which.min(x), which_minC(x))
library(Rcpp)
library(microbenchmark)
sourceCpp('cpp_test2.cpp')
x <- runif(1e6)
which.min(x)
which_minC(x)
microbenchmark(which.min(x), which_minC(x))
sourceCpp('cpp_test2.cpp')
which_min2C(x)
which_minC(x)
x <- runif(1e6)
which.min(x)
which_minC(x)
which_min2C(x)
sourceCpp('cpp_test2.cpp')
x <- runif(1e6)
min(x)
minC(x)
min2C(x)
min3C(x)
microbenchmark(min(x), minC(x), min2C(x), min3C(x))
sourceCpp('cpp_test2.cpp')
x <- runif(1e6)
min(x)
minC(x)
min2C(x)
min3C(x)
microbenchmark(min(x), minC(x), min2C(x), min3C(x))
sourceCpp('cpp_test2.cpp')
x <- runif(1e6)
min(x)
minC(x)
min2C(x)
min3C(x)
microbenchmark(min(x), minC(x), min2C(x), min3C(x))
sourceCpp('cpp_test2.cpp')
x <- runif(1e6)
min(x)
minC(x)
min2C(x)
min3C(x)
min4C(x)
microbenchmark(min(x), minC(x), min2C(x), min3C(x), min4C(x))
sourceCpp('cpp_test2.cpp')
which.min(x)
which_minC(x)
x <- runif(1e6)
which.min(x)
which_minC(x)
which_min2C(x)
sourceCpp('cpp_test2.cpp')
sourceCpp('cpp_test2.cpp')
which.min(x)
which_minC(x)
which_min2C(x)
microbenchmark(which.min(x), which_minC(x))
microbenchmark(which.min(x), which_minC(x), which_min2C(x))
z1 <- sample(1:10, 10, replace = T)
set.seed(666)
z1 <- sample(1:10, 10, replace = T)
z2 <- sample(1:10, 10, replace = T)
setdiff(z1, z2)
union(z1, z2)
intersect(z1, z2)
z1
z2
unique(z1)
unique(z2)
setdiff(z2, z1)
sourceCpp('cpp_test2.cpp')
union(z1, z2)
unionC(z1, z2)
sourceCpp('cpp_test2.cpp')
sort(union(z1, z2))
unionC(z1, z2)
sourceCpp('cpp_test2.cpp')
sort(union(z1, z2))
unionC(z1, z2)
sourceCpp('cpp_test2.cpp')
sort(union(z1, z2))
unionC(z1, z2)
x1 <- sample(1:1e4, 1e4, replace = T)
x2 <- sample(1:1e4, 1e4, replace = T)
microbenchmark(union(x1, x2), unionC(x1, x2))
sourceCpp('cpp_test2.cpp')
sort(setdiff(z1, z2))
setdiffC(z1, z2)
set_diffC(z1, z2)
sort(union(z1, z2))
unionC(z1, z2)
sort(intersect(z1, z2))
intersectC(z1, z2)
microbenchmark(union(x1, x2), unionC(x1, x2), setdiff(x1, x2), setdiffC(x1, x2), intersect(x1, x2), intersectC(x1, x2))
microbenchmark(union(x1, x2), unionC(x1, x2), setdiff(x1, x2), set_diffC(x1, x2), intersect(x1, x2), intersectC(x1, x2))
library(Rcpp)
library(microbenchmark)
sourceCpp('openmp_test.cpp')
hellomp()
hellomp_set(3)
hellomp_set(4)
x <- runif(1e7)
all.equal(mean(x), mean_serial(x), mean_parallel(x,1), mean_parallel(x,8))
m <- microbenchmark(mean(x), mean_serial(x), mean_parallel(x,1),mean_parallel(x,2), mean_parallel(x,3), mean_parallel(x,4), mean_parallel(x,5), mean_parallel(x,6),
mean_parallel(x,7), mean_parallel(x,8))
plot(m)
m
sourceCpp('openmp_test.cpp')
doublify(1:10)
sourceCpp('openmp_test.cpp')
doublify_omp(1:10)
doublify_omp(1:10, 4)
sourceCpp('openmp_test.cpp')
doublify(1:10)
doublify_omp(1:10, 4)
z <- sample(1:10, 1e6, replace = T)
doublify(1:10)
doublify_omp(1:10, 4)
microbenchmark(doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
z <- sample(1:10, 1e7, replace = T)
microbenchmark(doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
sourceCpp('openmp_test.cpp')
doublify(1:10)
doublify_omp(1:10, 4)
microbenchmark(doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
z <- sample(1:10, 1e6, replace = T)
sourceCpp('openmp_test.cpp')
microbenchmark(doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
sourceCpp('openmp_test.cpp')
microbenchmark(doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
m <- microbenchmark(doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
plot(m)
z <- sample(1:10, 1e7, replace = T)
m <- microbenchmark(doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
plot(m)
m
z <- sample(1:10, 1e6, replace = T)
m <- microbenchmark(doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
m
m
plot(m)
z <- sample(1:10, 1e8, replace = T)
m <- microbenchmark(doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
plot(m)
m
z <- sample(1:10, 1e5, replace = T)
m <- microbenchmark(doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
plot(m)
m
z <- sample(1:10, 1e10, replace = T)
z <- sample(1:10, 1e9, replace = T)
system.time(doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
system.time(doublify(z))
system.time(doublify_omp(z, 2))
system.time(doublify_omp(z, 3))
system.time(doublify_omp(z, 4))
z <- sample(1:10, 1e6, replace = T)
system.time(doublify(z))
system.time(doublify_omp(z, 2))
system.time(doublify_omp(z, 3))
system.time(doublify_omp(z, 4))
m <- microbenchmark(doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
plot(m)
m
m <- microbenchmark(2*z, doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
plot(m)
m
head(z)
doublify(1:10)
doublify_omp(1:10, 4)
sum(z)
z <- sample(1:10, 1e6, replace = T)
sum(z)
m <- microbenchmark(2*z, doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
plot(m)
m
m <- microbenchmark(2*z, doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
m
m <- microbenchmark(2*z, doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
m
sum(z)
z <- sample(1:10, 1e6, replace = T)
system.time(doublify(z))
sum(z)
z <- sample(1:10, 1e6, replace = T)
sum(z)
system.time(doublify(z))
sum(z)
z <- sample(1:10, 1e6, replace = T)
sourceCpp('openmp_test.cpp')
doublify(1:10)
doublify_omp(1:10, 4)
m <- microbenchmark(2*z, doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
plot(m)
m
sum(z)
z <- sample(1:10, 1e6, replace = T)
sum(z)
m <- microbenchmark(2*z, doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
sum(z)
z <- sample(1:10, 1e8, replace = T)
system.time(doublify(z))
system.time(doublify_omp(z, 2))
system.time(doublify_omp(z, 3))
system.time(doublify_omp(z, 4))
sourceCpp('openmp_test.cpp')
hellomp()
hellomp_set(4)
hellomp_set(3)
hellomp_set(2)
hellomp_set(1)
hellomp()
sourceCpp('openmp_test.cpp')
sourceCpp('openmp_test.cpp')
system.time(doublify(z))
system.time(doublify_omp(z, 2))
system.time(doublify_omp(z, 3))
system.time(doublify_omp(z, 4))
z <- sample(1:10, 1e6, replace = T)
doublify(1:10)
doublify_omp(1:10, 4)
m <- microbenchmark(2*z, doublify(z), doublify_omp(z,1), doublify_omp(z,2), doublify_omp(z,3), doublify_omp(z,4))
plot(m)
m
z <- sample(1:10, 1e8, replace = T)
sourceCpp('openmp_test.cpp')
system.time(doublify(z))
z <- sample(1:10, 1e8, replace = T)
system.time(doublify2_omp(z, 2))
z <- sample(1:10, 1e8, replace = T)
system.time(doublify2_omp(z, 3))
z <- sample(1:10, 1e8, replace = T)
system.time(doublify2_omp(z, 4))
z <- sample(1:10, 1e8, replace = T)
sourceCpp('openmp_test.cpp')
system.time(doublify(z))
z <- sample(1:10, 1e8, replace = T)
system.time(doublify2_omp(z, 2))
z <- sample(1:10, 1e8, replace = T)
system.time(doublify2_omp(z, 3))
z <- sample(1:10, 1e8, replace = T)
system.time(doublify2_omp(z, 4))
z <- sample(1:10, 1e8, replace = T)
sourceCpp('openmp_test.cpp')
system.time(doublify2(z))
z <- sample(1:10, 1e8, replace = T)
system.time(doublify2_omp(z, 2))
z <- sample(1:10, 1e8, replace = T)
system.time(doublify2_omp(z, 3))
z <- sample(1:10, 1e8, replace = T)
system.time(doublify2_omp(z, 4))
x <- runif(1e7)
all.equal(mean(x), mean_serial(x), mean_parallel(x,1), mean_parallel(x,8))
m <- microbenchmark(mean(x), mean_serial(x), mean_parallel(x,1),mean_parallel(x,2), mean_parallel(x,3), mean_parallel(x,4), mean_parallel(x,5), mean_parallel(x,6),
mean_parallel(x,7), mean_parallel(x,8))
m
plot(m)
sourceCpp('openmp_test.cpp')
sourceCpp('openmp_test.cpp')
all.equal(mean(x), mean_serial(x), mean_parallel(x,1), mean_parallel(x,8), mean_parallel2(x,8))
m <- microbenchmark(mean(x), mean_serial(x), mean2_parallel(x,1), mean2_parallel(x,2), mean2_parallel(x,3), mean2_parallel(x,4), mean2_parallel(x,5), mean2_parallel(x,6),
mean2_parallel(x,7), mean2_parallel(x,8))
m
plot(m)
sourceCpp('armadillo_test.cpp')
install.packages("RcppArmadillo")
library(RcppArmadillo)
sourceCpp('armadillo_test.cpp')
library(microbenchmark)
library(RcppArmadillo)
sourceCpp('armadillo_test.cpp')
library(Rcpp)
sourceCpp('armadillo_test.cpp')
sourceCpp('armadillo_test.cpp')
sourceCpp('armadillo_test.cpp')
vignette('RcppArmadillo')
?vignette
vignette()
vignette('RcppArmadillo-intro')
sourceCpp('armadillo_test.cpp')
m <- matrix(1:12, ncol=3)
m
a1(m)
sourceCpp('armadillo_test.cpp')
a2(1:10)
str(a2(1:10))
str(1:10)
a3(m)
sourceCpp('armadillo_test.cpp')
sourceCpp('armadillo_test.cpp')
a3(m)
sourceCpp('armadillo_test.cpp')
a4(m)
sourceCpp('armadillo_test.cpp')
sourceCpp('armadillo_test.cpp')
a5(m)
sourceCpp('armadillo_test.cpp')
a6(m)
a6(1:10)
sourceCpp('armadillo_test.cpp')
a7(m)
m <- matrix(1:12, ncol=3)
a7a(m)
sourceCpp('armadillo_test.cpp')
a7a(m)
sourceCpp('armadillo_test.cpp')
a8(21, 3, 70)
a8(5, 3, 70)
sourceCpp('armadillo_test.cpp')
a9(5,3)
sourceCpp('armadillo_test.cpp')
a9(5,3)
str(a9(5,3))
m
sourceCpp('armadillo_test.cpp')
a10(m, 2, 3)
a10(m, 1, 2)
sourceCpp('armadillo_test.cpp')
a11(m, 1)
sourceCpp('armadillo_test.cpp')
a12(m, 1)
sourceCpp('armadillo_test.cpp')
a13(m, 0, 1)
a13(m)
sourceCpp('armadillo_test.cpp')
a14(m)
sourceCpp('armadillo_test.cpp')
a15(m)
m %*% m
m %*% t(m)
m1 <- matrix(1:9, ncol=3)
m1 %*% m1
a16(m1)
sourceCpp('armadillo_test.cpp')
a16(m1)
m1 * m1
sourceCpp('armadillo_test.cpp')
exp(m)
a17(x)
a17(m)
sourceCpp('armadillo_test.cpp')
a18(m)
sourceCpp('armadillo_test.cpp')
t(m) %*% m
a19(m)
sourceCpp('armadillo_test.cpp')
inv(t(m) %*% m)
solve(t(m) %*% m)
a20(m)
solve(m1 %*% m)
solve(m1 %*% m1)
solve(m)
solve(m1)
m2 <- matrix(runif(9), ncol=3)
solve(m2)
a20(m)
sourceCpp('armadillo_test.cpp')
a20(m)
a20(m2)
m
a19(m)
sourceCpp('armadillo_test.cpp')
chol(m2)
m2
m2^2
cov(m2)
chol(cov(m2))
m3 <- abs(cov(m2))
chol(m3)
?chol
m3 <- matrix(c(5,1,1,3),2,2)
chol(m3)
a21(m3)
factorial(7)
t <- seq(0,1, by=,01)
t <- seq(0,1, by=.01)
f <- function(t) (exp(t) - exp(-t)) / (2*t)
plot(t, f(t))
sourceCpp('armadillo_test.cpp')
library(Rcpp)
library(microbenchmark)
library(RcppArmadillo)
sourceCpp('armadillo_test.cpp')
a22(m3)
m1 <- matrix(1:9, ncol=3)
m2 <- matrix(runif(9), ncol=3)
m3 <- matrix(c(5,1,1,3),2,2)
a22(m3)
svd(m3)
sourceCpp('armadillo_test.cpp')
a23(1)
a23(2)
sourceCpp('armadillo_test.cpp')
a24(3)
a24(2)
sourceCpp('armadillo_test.cpp')
data(iris)
head(iris)
lm(iris$Sepal.Length ~ iris$Sepal.Width + iris$Petal.Length)
str(iris[1,])
str(iris[,1])
lmA(iris[, 2:3],  iris[ ,1])
as.matrix(iris[, 2:3])
lmA(as.matrix(iris[, 2:3]),  iris[ ,1])
as.matrix(iris[ ,1])
lmA(as.matrix(iris[, 2:3]),  as.matrix(iris[ ,1]))
lm(iris$Sepal.Length ~ iris$Sepal.Width + iris$Petal.Length)
View(iris)
cbind(1, as.matrix(iris[, 2:3]))
lmA(cbind(1, as.matrix(iris[, 2:3])),  as.matrix(iris[ ,1]))
lm(iris$Sepal.Length ~ iris$Sepal.Width + iris$Petal.Length)
microbenchmark(lm(iris$Sepal.Length ~ iris$Sepal.Width + iris$Petal.Length), lmA(cbind(1, as.matrix(iris[, 2:3])),  as.matrix(iris[ ,1])))
source('../test_code/loadmnist.R')
library(Rcpp)
library(microbenchmark)
library(RcppArmadillo)
setwd("C:/HY-Data/HYVI/git/MRPT/mrpt_code/test")
source('../test_code/loadmnist.R')
mnist <- loadmnist()
X_mnist <- mnist$X[1:(2^12+100), ]
x_idx <- 1:100
x <- X_mnist[x_idx,]
n_points <- nrow(x)
X_test <- X_mnist[-x_idx,]
sourceCpp('test_cpp.R')
sourceCpp('../source/tree.cpp')
x
a <- buildTree(x)
str(a)
str(a[[1]])
sourceCpp('../source/tree.cpp')
sourceCpp('../source/tree.cpp')
sourceCpp('../source/tree.cpp')
a <- buildTree(x)
sourceCpp('../source/tree.cpp')
sourceCpp('../source/tree.cpp')
a <- buildTree(x)
sourceCpp('../source/tree.cpp')
a <- buildTree(x)
sourceCpp('../source/tree.cpp')
a <- buildTree(x)
sourceCpp('../source/tree.cpp')
a <- buildTree(x)
n_0 <- 8
a <- buildTree(x, n_0)
ceiling(log2(100/8))
a <- buildTree(x, n_0, 1)
sourceCpp('../source/tree.cpp')
a <- buildTree(x, n_0, 1)
a <- buildTree(x, n_0, 2)
sourceCpp('../source/tree.cpp')
a <- buildTree(x, n_0, 2)
sourceCpp('../source/tree.cpp')
a <- buildTree(x, n_0, 2)
sourceCpp('../source/tree.cpp')
a <- buildTree(x, n_0, 2)
sourceCpp('../source/tree.cpp')
a <- buildTree(x, n_0, 2)
